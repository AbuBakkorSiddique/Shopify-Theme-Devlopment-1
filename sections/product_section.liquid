{% assign review = product.metafields.custom.review %}
{% assign count = product.metafields.custom.reviewnumber %}

<div class="w-full max-w-[100vw] mx-auto px-[3vw] md:px-[8vw] lg:px-[10vw]  flex justify-center items-center  min-h-[100vh]">
  <!-- Sub DIv  Start -->
  <div class="w-full   min-h-[80vh] grid grid-cols-1 lg:grid-cols-2 gap-2 ">
    <!-- Left Side Start -->
    <div class=" grid grid-cols-4 gap-5">
      <!-- Left Side> Left -->
      <div class=" col-span-1 grid grid-rows-4 gap-3">
        <!-- Product Related Producs -->
        {% for img in product.images limit: 4 %}
          <div class="  ">
            <img onclick="ImageChange(this)" src="{{ img.src | image_url }}" alt="" class="h-full w-full object-cover" id="Images">
          </div>
        {% endfor %}
      </div>
      <!-- Left Side> Right -->
      <div class=" col-span-3">
        <img  src="{{ product.featured_image.src | image_url }}" alt="" class="h-full w-full object-cover" id="FeatureImage">
      </div>
    </div>
    <!-- Left Side Finish -->

    <!-- RIght SIde -->
    <div class=" flex flex-col gap-3 px-5 py-5 lg:py-0 ">
      <!-- Product Title -->
      <h1 class="text-xl font-bold ">{{ product.title }}</h1>
      <!-- Product Review -->
      <div class="flex flex-row gap-5 ">
        <!-- Review Section -->
        <span class="flex flex-row space-x-1">
          {% for i in (1..5) %}
            {% if i <= review %}
              <svg class="w-5 h-5 text-yellow-400 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                <path d="M10 15l-5.878 3.09 1.122-6.545L.488 6.91l6.564-.955L10 0l2.948 5.955 6.564.955-4.756 4.635 1.122 6.545z"/>
              </svg>
            {% else %}
              <svg class="w-5 h-5 text-gray-300 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                <path d="M10 15l-5.878 3.09 1.122-6.545L.488 6.91l6.564-.955L10 0l2.948 5.955 6.564.955-4.756 4.635 1.122 6.545z"/>
              </svg>
            {% endif %}
          {% endfor %}
        </span>
        ({{ count }})
      </div>
      <!-- Product Price -->
      <span class="text-xl font-bold flex flex-row "> {{ product.price | money }} </span>

  

      <!-- -  Product Form  /  Add to Cart ---------- -->

      <!-- Add to Cart Form -->
 <!-- Add to Cart Form -->
<form method="post" action="/cart/add" id="add-to-cart-form">
  <input type="hidden" name="id" id="variant-id" value="{{ product.selected_or_first_available_variant.id}}">

  <!-- Product Options -->
  <div id="product-options">
 {% unless  product.has_only_default_variant %}

   {% for option in product.options_with_values %}
    <div class="flex flex-col gap-2">
      <h1 class="font-bold">{{ option.name }}</h1>
      <div class="flex flex-wrap gap-2 mb-3 w-full" data-option-index="{{ forloop.index0 }}">
        {% for value in option.values %}
        <button
          type="button"
          class="border inset-shadow-cyan-300 p-2 rounded-md hover:bg-red-600 hover:text-white option-button"
          data-value="{{ value }}"
        >
          {{ value }}
        </button>
        {% endfor %}
      </div>
    </div>
    {% endfor %}
 

   
 {% endunless %}
  </div>

  <!-- Quantity & Buy Now -->
  <div class="min-h-[8vh] w-full grid grid-cols-4 gap-2">
    <div class="border border-black grid grid-cols-3">
      <div class="border border-black flex justify-center items-center hover:bg-red-600 font-bold hover:text-white" id="plus">
        {% render 'Plus_icons' | asset_url %}
      </div>
      <div class="border border-black flex justify-center items-center" id="qnt">1</div>
      <div class="border border-black flex justify-center items-center hover:bg-red-600 font-bold hover:text-white" id="minus">
        {% render 'Minus_icons' | asset_url %}
      </div>
      <input type="hidden" name="quantity" id="quantity" value="1" />
    </div>

    <button type="submit" class="col-span-2 bg-red-600 flex justify-center items-center rounded-md text-white font-bold">
      Add To Cart 
    </button>

    <div class="border-2 border-black flex justify-center items-center font-bold">
      {% render 'love_icons' | asset_url %}
    </div>
  </div>
</form>


      <!--- Product Delivary and Return Polisiy -->

      <div class="min-h-[20vh] w-full border grid grid-rows-2 mt-2">

        <div class="grid grid-cols-4 gap-5 justify-center items-center ">
          <div class="flex justify-center items-center "> <h1 class="text-xl font-bold "> {% render 'Truck_icons' | asset_url %} </h1> </div>
          <div class="col-span-3 flex flex-col gap-2 p-2">
            <h1 class="text-lg font-bold ">  Free Delivery</h1>
            <p class="text-sm">  Enter your postal code for Delivery Availability</p>
          </div>
          </div>
    <!-- Return -->
        <div class="border-t grid grid-cols-4 gap-5 justify-center items-center  ">

          <div class="flex justify-center items-center "> {% render 'Return_icons' | asset_url %} </div>
          <div class="col-span-3 flex flex-col p-2 gap-2">
          <h1 class="text-lg font-bold ">Return Delivery</h1>
            <p class="text-sm"> Free 30 Days Delivery Returns. Details</p>
          </div>  
          
          </div>
        

        </div>











      <!-- RIght Side Finish -->
    </div>

    <!-- Sub Div Finish -->
  </div>
</div>

<!-- ------------  Schema -------------- -->

{% schema %}
{
  "name": "Product Detail Main ",
  "settings": []
}
{% endschema %}




<!-------------- JavaScript ------------->


<script>

  const plus = document.getElementById("plus");
  const minus = document.getElementById("minus");
  const qnttiy = document.getElementById("qnt") ;
  const HiddenInput = document.getElementById("quantity")

plus.addEventListener("click", () => {
  let quantity = parseInt(qnt.textContent);
  quantity++;
  qnt.textContent = quantity;
  HiddenInput.value= quantity; 
});

minus.addEventListener("click", () => {
  let quantity = parseInt(qnt.textContent);
  if (quantity > 1) {
    quantity--;
    qnt.textContent = quantity;
    HiddenInput= quantity;
  }
});


// multy variant 

  const options = {{ product.options | json }};
  const variants = {{ product.variants | json }};

  const selectedOptions = {};
  const variantIdInput = document.getElementById("variant-id");

  document.querySelectorAll(".option-button").forEach(button => {
    button.addEventListener("click", function () {
      const group = this.closest("[data-option-index]");
      const index = group.getAttribute("data-option-index");
      const value = this.getAttribute("data-value");

      // Remove previous selected style from group
      group.querySelectorAll(".option-button").forEach(btn => btn.classList.remove("bg-red-600", "text-white"));
      this.classList.add("bg-red-600", "text-white");

      selectedOptions[index] = value;

      if (Object.keys(selectedOptions).length === options.length) {
        const selectedValues = options.map((_, i) => selectedOptions[i]);
        const match = variants.find(v => JSON.stringify(v.options) === JSON.stringify(selectedValues));
        if (match) {
          variantIdInput.value = match.id;
        }
      }
    });
  });







// Images Src Change By CLick 

let FeatureImage= document.getElementById("FeatureImage");


function ImageChange(image){
FeatureImage.src=image.src;
 FeatureImage.classList.remove('object-cover');
  FeatureImage.classList.add('object-contain');
 

}




  </script>